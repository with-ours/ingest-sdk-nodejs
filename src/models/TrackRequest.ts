/* tslint:disable */
/* eslint-disable */
/**
 * Ours
 * The Ours Server-Side REST API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TrackRequestDefaultProperties } from './TrackRequestDefaultProperties';
import {
    TrackRequestDefaultPropertiesFromJSON,
    TrackRequestDefaultPropertiesFromJSONTyped,
    TrackRequestDefaultPropertiesToJSON,
    TrackRequestDefaultPropertiesToJSONTyped,
} from './TrackRequestDefaultProperties';
import type { TrackRequestUserProperties } from './TrackRequestUserProperties';
import {
    TrackRequestUserPropertiesFromJSON,
    TrackRequestUserPropertiesFromJSONTyped,
    TrackRequestUserPropertiesToJSON,
    TrackRequestUserPropertiesToJSONTyped,
} from './TrackRequestUserProperties';

/**
 * 
 * @export
 * @interface TrackRequest
 */
export interface TrackRequest {
    /**
     * The name of the event you're tracking. This must be whitelisted in the Ours dashboard.
     * @type {string}
     * @memberof TrackRequest
     */
    event: string;
    /**
     * The token for your Ours Privacy Source. You can find this in the Ours dashboard.
     * @type {string}
     * @memberof TrackRequest
     */
    token: string;
    /**
     * The Ours user id stored in local storage and cookies on your web properties. If userId is included in the request, we do not lookup the user by email or externalId.
     * @type {string}
     * @memberof TrackRequest
     */
    userId?: string | null;
    /**
     * The externalId (the ID in your system) of a user. We will associate this event with the user or create a user. If included in the request, email lookup is ignored.
     * @type {string}
     * @memberof TrackRequest
     */
    externalId?: string | null;
    /**
     * The email address of a user. We will associate this event with the user or create a user. Used for lookup if externalId and userId are not included in the request.
     * @type {string}
     * @memberof TrackRequest
     */
    email?: string | null;
    /**
     * Any additional event properties you want to pass along.
     * @type {{ [key: string]: any | null; }}
     * @memberof TrackRequest
     */
    eventProperties?: { [key: string]: any | null; } | null;
    /**
     * 
     * @type {TrackRequestUserProperties}
     * @memberof TrackRequest
     */
    userProperties?: TrackRequestUserProperties | null;
    /**
     * 
     * @type {TrackRequestDefaultProperties}
     * @memberof TrackRequest
     */
    defaultProperties?: TrackRequestDefaultProperties | null;
    /**
     * A unique identifier for the event. This helps prevent duplicate events.
     * @type {string}
     * @memberof TrackRequest
     */
    distinctId?: string | null;
}

/**
 * Check if a given object implements the TrackRequest interface.
 */
export function instanceOfTrackRequest(value: object): value is TrackRequest {
    if (!('event' in value) || value['event'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function TrackRequestFromJSON(json: any): TrackRequest {
    return TrackRequestFromJSONTyped(json, false);
}

export function TrackRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'event': json['event'],
        'token': json['token'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'email': json['email'] == null ? undefined : json['email'],
        'eventProperties': json['eventProperties'] == null ? undefined : json['eventProperties'],
        'userProperties': json['userProperties'] == null ? undefined : TrackRequestUserPropertiesFromJSON(json['userProperties']),
        'defaultProperties': json['defaultProperties'] == null ? undefined : TrackRequestDefaultPropertiesFromJSON(json['defaultProperties']),
        'distinctId': json['distinctId'] == null ? undefined : json['distinctId'],
    };
}

export function TrackRequestToJSON(json: any): TrackRequest {
    return TrackRequestToJSONTyped(json, false);
}

export function TrackRequestToJSONTyped(value?: TrackRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event': value['event'],
        'token': value['token'],
        'userId': value['userId'],
        'externalId': value['externalId'],
        'email': value['email'],
        'eventProperties': value['eventProperties'],
        'userProperties': TrackRequestUserPropertiesToJSON(value['userProperties']),
        'defaultProperties': TrackRequestDefaultPropertiesToJSON(value['defaultProperties']),
        'distinctId': value['distinctId'],
    };
}

